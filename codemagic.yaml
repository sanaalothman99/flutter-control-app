workflows:
  ios-appstore:
    name: iOS App Store / TestFlight (IPA)
    max_build_duration: 60

    # نستخدم تكامل Codemagic مع Apple (الإسم لازم يطابق اللي عندك بالـ Integrations)
    integrations:
      app_store_connect: CodemagicKey

    environment:
      flutter: stable
      xcode: latest
      cocoapods: default

      # توقيع تلقائي عبر Codemagic باستخدام نوع App Store
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.drd.ecremote

    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
        - ~/Library/Caches/CocoaPods

    scripts:
      - name: Flutter prep
        script: |
          flutter --version
          flutter clean
          flutter pub get

      - name: iOS Pods (platform 13.0 + static frameworks)
        script: |
          cd ios

          # اضبط الحد الأدنى iOS 13.0
          if grep -q "platform :ios" Podfile; then
            sed -i '' "s/platform :ios, '[^']'/platform :ios, '13.0'/" Podfile
          else
            printf "\nplatform :ios, '13.0'\n" >> Podfile
          fi

          # استخدم frameworks ستاتيكية (يحل مشاكل flutter_blue_plus على iOS)
          if ! grep -q "use_frameworks!" Podfile; then
            echo "use_frameworks! :linkage => :static" >> Podfile
          fi

          # عطّل التوقيع عن Pods (منع تضارب التوقيع وقت الأرشفة)
          if ! grep -q "CODE_SIGNING_ALLOWED" Podfile; then
            cat >> Podfile <<'RUBY'
            post_install do |installer|
            installer.pods_project.targets.each do |t|
            t.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
             end
            end
          end
          RUBY
          fi
  
         pod repo update
         pod install
         cd ..

      - name: Bump build number (تلقائي)
        script: |
          PLIST="ios/Runner/Info.plist"
          CURRENT=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "$PLIST" 2>/dev/null || echo 0)
          NEXT=$(( CURRENT + 1 ))
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEXT" "$PLIST" \
          || /usr/libexec/PlistBuddy -c "Add :CFBundleVersion string $NEXT" "$PLIST"
          echo "Using build number: $NEXT"

      - name: Set up code signing on Xcode project
        script: |
    # يوجه Xcode لاستخدام ملفات التوقيع التي جهزها Codemagic
         xcode-project use-profiles

      - name: Build IPA (App Store)
        script: |
    # ما منحتاج ExportOptions.plist لأن Codemagic يضبطه تلقائيًا مع app_store
         flutter build ipa --release --no-tree-shake-icons

artifacts:
  - build/ios/ipa/*.ipa
  - build/ios/archive/*.xcarchive

publishing:
  app_store_connect:
    submit_to_testflight: true
    # لو بدك ترسلي تلقائيًا لمجموعة داخلية معينة، فكي التعليق وحطي الاسم الموجود في TestFlight