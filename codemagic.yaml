workflows:
  ios-testflight:
    name: iOS TestFlight (Codemagic)
    max_build_duration: 60

    environment:
      flutter: stable
      xcode: latest
      cocoapods: default

      # خلي Codemagic يوقّع تلقائيًا لنوع App Store على الـ bundle id تبعك
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.drd.ecremote

      # مجموعة مفاتيح App Store Connect (لا تغيّري اسم المجموعة)
      groups:
        - app_store_connect

    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
        - ~/Library/Caches/CocoaPods

    scripts:
      # 0) معلومات النظام مفيدة للدعم
      - name: Show versions
        script: |
          flutter --version
          xcodebuild -version
          pod --version

      # 1) إصلاح Podfile دائمًا (يتجاوز أي صيغة خاطئة)
      - name: Ensure valid iOS Podfile
        script: |
          cat > ios/Podfile <<'EOF'
          platform :ios, '13.0'

          use_frameworks!
          use_modular_headers!

          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }

          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), File.expand_path('..', _dir_))

          flutter_ios_podfile_setup

          target 'Runner' do
            flutter_install_all_ios_pods File.dirname(File.realpath(_FILE_))
          end

          post_install do |installer|
            installer.pods_project.targets.each do |target|
              flutter_additional_ios_build_settings(target)
            end
          end
          EOF

      # 2) Flutter prep
      - name: Flutter prep
        script: |
          flutter clean
          flutter pub get

      # 3) تثبيت الـ Pods
      - name: iOS Pods (platform 13.0 + install)
        script: |
          cd ios
          pod repo update
          pod install
          cd ..

      # 4) رفع رقم البناء تلقائيًا (patch) وضبط build number
      - name: Bump version (patch) + set build number
        script: |
          # استخرج آخر CFBundleVersion (إن لم يوجد استخدم 0) وزيده 1
          CURRENT=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" ios/Runner/Info.plist 2>/dev/null || echo 0)
          NEW_BUILD_NUMBER=$((CURRENT + 1))
          echo "New build number: ${NEW_BUILD_NUMBER}"
          # ممكن تثبتي build-name لو حبيتي (مثلاً 1.0.0)
          flutter build ios --no-codesign --build-number=${NEW_BUILD_NUMBER}

      # 5) تفعيل التوقيع التلقائي في مشروع Xcode
      - name: Set up code signing on Xcode project (auto)
        script: |
          # مع ios_signing أعلاه Codemagic يولّد/يستخدم البروفايل المناسب تلقائيًا
          xcode-project use-profiles

      # 6) بناء IPA (App Store)
      - name: Build IPA (release)
        script: |
          # لا نمرر ExportOptions لأن Codemagic يضبطها للـ app-store تلقائيًا
          flutter build ipa --release --no-tree-shake-icons

      # 7) (اختياري) طباعة معلومات داخل الـ IPA للتشخيص
      - name: Debug archive contents (post)
        script: |
          set -e
          IPA_PATH=$(ls build/ios/ipa/*.ipa | head -n 1)
          echo "IPA_PATH=${IPA_PATH}"
          TMPDIR=$(mktemp -d)
          unzip -q "$IPA_PATH" -d "$TMPDIR"
          APPDIR="$TMPDIR/Payload/Runner.app"
          echo "CFBundleIdentifier in Runner:"
          /usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" "$APPDIR/Info.plist" || true
          echo "Embedded mobileprovision exists?"
          test -f "$APPDIR/embedded.mobileprovision" && echo "embedded.mobileprovision FOUND" || echo "embedded.mobileprovision MISSING"
          echo "Some nested frameworks CFBundleIdentifier (if any):"
          /usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" "$APPDIR/Frameworks/Flutter.framework/Info.plist" 2>/dev/null || true
          /usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" "$APPDIR/Frameworks/App.framework/Info.plist" 2>/dev/null || true

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive

    publishing:
      app_store_connect:
        # استخدمي المتغيرات من مجموعة app_store_connect
        api_key: $APP_STORE_API_KEY     # مفتاح .p8 مشفّر Base64 (المحتوى نفسه بعد Base64)
        key_id: $APP_STORE_KEY_ID
        issuer_id: $APP_STORE_ISSUER_ID
        submit_to_testflight: true