workflows:
  ios-appstore-manual:
    name: iOS App Store (manual signing)
    max_build_duration: 60

    environment:
      flutter: stable
      xcode: latest
      cocoapods: default

    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
        - ~/Library/Caches/CocoaPods

    scripts:
      # 0) معلومات للتشخيص
      - name: Show versions
        script: |
          set -e
          flutter --version
          xcodebuild -version
          pod --version

      # 1) ضمان Podfile صحيح (يتجنّب أخطاء _dir_ الخ..)
      - name: Ensure valid iOS Podfile
        script: |
          set -e
          cat > ios/Podfile <<'EOF'
          platform :ios, '13.0'

          use_frameworks!
          use_modular_headers!

          ENV['COCOAPODS_DISABLE_STATS'] = 'true'

          project 'Runner', {
            'Debug' => :debug,
            'Profile' => :release,
            'Release' => :release,
          }

          # podhelper من Flutter SDK (نستخدم مسار أب لجذر iOS)
          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), File.expand_path('..', __dir__))

          flutter_ios_podfile_setup

          target 'Runner' do
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            installer.pods_project.targets.each do |target|
              flutter_additional_ios_build_settings(target)
            end
          end
          EOF

      # 2) Flutter prep
      - name: Flutter prep
        script: |
          set -e
          flutter clean
          flutter pub get

      # 3) Pods
      - name: iOS Pods (install)
        script: |
          set -e
          cd ios
          pod repo update
          pod install
          cd ..

      # 4) تفعيل الشهادات والبروفايلات المرفوعة في Code signing
      - name: Set up manual code signing
        script: |
          set -e
          keychain add-certificates
          xcode-project use-profiles

      # 5) بناء IPA (App Store)
      - name: Build IPA (release)
        script: |
          set -e
          xcode-project build-ipa \
            --workspace=ios/Runner.xcworkspace \
            --scheme=Runner \
            --archive-flags="-allowProvisioningUpdates"

      # 6) (اختياري) فحص محتوى الـ IPA للتشخيص
      - name: Debug archive contents (post)
        script: |
          set -e
          IPA_PATH=$(ls build/ios/ipa/*.ipa | head -n 1)
          echo "IPA_PATH=${IPA_PATH}"
          TMPDIR=$(mktemp -d)
          unzip -q "$IPA_PATH" -d "$TMPDIR"
          APPDIR="$TMPDIR/Payload/Runner.app"
          echo "Bundle id:"
          /usr/libexec/PlistBuddy -c "Print CFBundleIdentifier" "$APPDIR/Info.plist" || true
          test -f "$APPDIR/embedded.mobileprovision" && echo "embedded.mobileprovision FOUND" || echo "embedded.mobileprovision MISSING"

    artifacts:
      - build/ios/ipa/*.ipa
      - build/ios/archive/*.xcarchive